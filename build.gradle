buildscript {
    ext {
        mavenRepos = {
            mavenLocal()
            maven { url "https://plugins.gradle.org/m2/" }
            maven { url "https://repo.grails.org/grails/core" }
            mavenCentral()
            maven {
                credentials {
                    username mavenUser
                    password mavenPassword
                }
                url "http://maven.causecode.com"
            }
        }
    }
    repositories mavenRepos
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:views-gradle:1.1.0"
        classpath "com.causecode.plugins:gradle-code-quality:0.0.9"
    }
}

version "0.0.3"
group "com.causecode.plugins"

apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"org.grails.plugins.views-json"
apply plugin:'gradle-code-quality'

repositories mavenRepos

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    // Default plugin dependencies shipped with grails 3.2.0 and rest-api-plugin profile.
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    console "org.grails:grails-console"
    profile "org.grails.profiles:rest-api-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    // provided "org.codehaus.groovy:groovy-ant"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    // Spring Security Dependencies
    provided "org.grails.plugins:spring-security-core:3.1.1"
    provided "org.grails.plugins:spring-security-rest:2.0.0.M2"

    // CauseCode Dependencies
    provided "com.causecode.plugins:nucleus:0.4.8"
}

project.publishing {
    publications {
        mavenJava(MavenPublication) {
            from project.components.java

            artifactId "rest-security-core"

            pom.withXml {
                def pomNode = asNode()
                // version-less dependencies are handled with dependencyManagement
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username mavenPublishUser
                password mavenPublishPassword
            }
            url "http://maven-upload.causecode.com"
        }
    }
}

grailsPublish {
    // TODO: Provide values here
    user = 'user'
    key = 'key'
    githubSlug = 'foo/bar'
    license {
        name = 'Apache-2.0'
    }
    title = "My Plugin"
    desc = "Full plugin description"
    developers = [johndoe:"John Doe"]
    portalUser = ""
    portalPassword = ""    
}

ccJacocoExt {
    excludes = [
        '**/Application*/**',
        '**/UrlMappings*/**',
    ]
}
